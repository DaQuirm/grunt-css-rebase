// Generated by CoffeeScript 1.6.2
/*
 grunt-css-paths
 https://github.com/daquirm/grunt-css-paths

 Copyright (c) 2013 DaQuirm
 Licensed under the LGPL license.
*/

var fs, path, rework;

fs = require('fs');

path = require('path');

rework = require('rework');

module.exports = function(grunt) {
  return grunt.registerMultiTask('css_paths', 'Resolve paths in CSS files', function() {
    var is_dir, options, process_file;

    options = this.options({});
    process_file = function(file) {
      var css, reworked;

      css = grunt.file.read(file, {
        encoding: 'utf8'
      });
      reworked = rework(css).use(rework.url(function(url) {
        var resource_dest_path, resource_src_path;

        if ((url != null) && !/base64\,/.test(url)) {
          resource_src_path = path.resolve(path.dirname(file), url);
          if (options.resource_dest) {
            resource_dest_path = path.resolve(options.resource_dest, path.basename(resource_src_path));
            if (options.copy) {
              if (grunt.file.exists(resource_src_path)) {
                grunt.file.copy(resource_src_path, resource_dest_path);
              } else {
                grunt.verbose.writeln("Couldn't find " + resource_src_path);
              }
            }
            return path.relative(path.dirname(options.resource_dest), resource_dest_path);
          } else {
            return path.basename(resource_src_path);
          }
        } else {
          return url;
        }
      }));
      return reworked.toString();
    };
    is_dir = function(filepath) {
      return path.extname(filepath) === '';
    };
    return this.files.forEach(function(_arg) {
      var dest, dest_file, processed, src;

      dest = _arg.dest, src = _arg.src;
      if (is_dir(dest)) {
        return src.forEach(function(file) {
          var dest_file, processed;

          dest_file = path.resolve(dest, path.basename(file));
          processed = process_file(file);
          return grunt.file.write(dest_file, "" + processed + "\n");
        });
      } else {
        processed = (src.map(process_file)).join('\n');
        dest_file = dest;
        return grunt.file.write(dest_file, "" + processed + "\n");
      }
    });
  });
};
